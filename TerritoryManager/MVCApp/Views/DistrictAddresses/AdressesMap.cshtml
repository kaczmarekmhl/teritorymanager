@model MVCApp.Models.District

@{
    Layout = "~/Views/Shared/_LayoutGoogleMap.cshtml";
    ViewBag.Title = Strings.SearchAddressMap;
}

    <div id="map_canvas"/>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCFKfov1eRZaxk15f7Ax0DJKVqKOSC8XjM"></script>
    <script type="text/javascript" src="~/Scripts/geoxml3.js"></script>
    <script>

        var map;
        var infowindow;

        function initialize() {

            var map_canvas = document.getElementById('map_canvas');
            var map_options = {
                center: new google.maps.LatLng(56.0000, 12.0000),
                zoom: 7
            }
            map = new google.maps.Map(map_canvas, map_options)

            var myParser = new geoXML3.parser({
                map: map,
                singleInfoWindow: true,
                polygonOptions: { clickable: false },
                createMarker: createMarker
            });
            myParser.parse('@Url.Action("AdressesMapKml", new { id = Model.Id })');

            // You current location on mobile devices
            if (navigator.geolocation) {
                var markerOptions = { title: 'my location', map: map, icon: "/images/geoPos.png" };
                var marker = new google.maps.Marker(markerOptions);

                function successChangePosition(pos) {

                    var pos = {
                        lat: pos.coords.latitude,
                        lng: pos.coords.longitude
                    };

                    marker.setPosition(pos);
                }

                function errorChangePosition(err) {
                }

                options = {
                    enableHighAccuracy: false,
                    timeout: 5000,
                    maximumAge: 0
                };

                id = navigator.geolocation.watchPosition(successChangePosition, errorChangePosition, options);

            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }

            setGoogleMapNavigationUrlVisibility();
        }

        function createMarker(placemark, doc) {

            var personNumber = getPersonNumber(placemark.name);

            var icon = '@Url.Action("GetAddressPinFromGoogleChart", new { parameters = "chst=d_map_spin&chld=0.8|0|FE6256|12|_|" })' + personNumber;

            if (placemark.description.indexOf('@Strings.PersonDoNotVisit') > -1)
            {
                icon = '@Url.Action("GetAddressPinFromGoogleChart", new { parameters = "chst=d_map_xpin_letter&chld=pin_star|" })' + personNumber + '|e80c4d|000000';
            }
            if (placemark.description.indexOf('@Strings.PersonVisitedBy.Replace("{0}", "")') > -1)
            {
                icon = '@Url.Action("GetAddressPinFromGoogleChart", new { parameters = "chst=d_map_xpin_letter&chld=pin_star|" })' + personNumber + '|7ac0da|000000|FFFFFF';
            }

            var markerOptions = {
                title: placemark.name,
                infocontent: placemark.description,
                position: placemark.latlng,
                icon: icon,
                map: map
            };

            // Create the marker on the map
            var marker = new google.maps.Marker(markerOptions);
            infowindow = new google.maps.InfoWindow();

            google.maps.event.addListener(marker, 'click', function () {

                var contentString = '<div id="content">' +
      '<div id="siteNotice">' +
      '</div>' +
      '<h3>' + marker.title + '</h3>' +
      '<div id="bodyContent">' +
      '<p>' + marker.infocontent + '</p>' +
      '</div>' +
      '</div>';

                infowindow.setContent(contentString);
                infowindow.open(map, marker);
            });
        }

        function getPersonNumber(text) {
            var matches = text.match(/[0-9]+/);

            if (matches != null) {
                return matches[0];
            }

            return '';
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>

    @Html.Partial("_GoogleAnalytics")

