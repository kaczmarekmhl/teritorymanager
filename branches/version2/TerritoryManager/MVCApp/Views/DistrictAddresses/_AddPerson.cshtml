@model MVCApp.Models.Person

@{
    int districtId = ViewBag.DistrictId;
    string districtName = ViewBag.DistrictName;

    Model.PostCode = ViewBag.DistrictPostCode;
}

<div id="addPersonFormWrapper">

    <div class="infoMessage" id="result"></div>

@using (Ajax.BeginForm("AddPerson", null, new AjaxOptions { UpdateTargetId = "result", OnBegin = "validatePerson" }, new { id = "addPersonForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Add person</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lastname)
            @Html.ValidationMessageFor(model => model.Lastname)
        </div>

        @Html.HiddenFor(model => model.District.Id, new { Value = districtId })
        @Html.HiddenFor(model => model.Latitude, new { data_geo = "lat" })
        @Html.HiddenFor(model => model.Longitude, new { data_geo = "lng" })
        @Html.HiddenFor(model => model.PostCode, new { data_geo = "postal_code" })
        @Html.HiddenFor(model => model.StreetAddress)
        <input id="Route" name="Route" type="hidden" data-geo="route">
        <input id="StreetNumber" name="StreetNumber" type="hidden" data-geo="street_number">

        <div class="editor-label">
            @Html.LabelFor(model => model.StreetAddress)
        </div>
        <input id="geocomplete" type="text" placeholder="@Strings.AutocompleteAddressEnterLocation" />
        <span class="field-validation-error" hidden="hidden" id="GeoCompleteValidationError"></span>

        <div class="editor-label">
            @Html.LabelFor(model => model.TelephoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TelephoneNumber)
            @Html.ValidationMessageFor(model => model.TelephoneNumber)
        </div>

        <p>
            <input type="submit" value="Dodaj" />
        </p>
    </fieldset>
}
    
</div>

<div id="addPersonMap">
    <div class="addPersonMapCanvas"></div>
</div>

<div class="spacer" />



@{
    string country = "";
    
    if(ViewBag.DistrictCountry == MVCApp.Enums.Country.Denmark)
    {
        country = "dk";
    }
    else  if(ViewBag.DistrictCountry == MVCApp.Enums.Country.Norway)
    {
        country = "no";
    }
}

<script>
    function validatePerson(ajaxContext) {
        
        return validateAddress();
    }

    function validateAddress() {

        $("#GeoCompleteValidationError").text("");
        $("#GeoCompleteValidationError").hide();

        if ($("#Route").val() == '') {
            $("#GeoCompleteValidationError").text("Podaj nazwę ulicy");
            $("#GeoCompleteValidationError").show();

            return false;
        }
        else if ($("#StreetNumber").val() == '') {
            $("#GeoCompleteValidationError").text("Podaj numer ulicy");
            $("#GeoCompleteValidationError").show();

            return false;
        }
        else if ($("input[data-geo='lat']").val() == '' || $("input[data-geo='lng']").val() == '') {
            $("#GeoCompleteValidationError").text("Nie można określić lokalizacji adresu. Wpisz ponownie dokładny adres.");
            $("#GeoCompleteValidationError").show();

            return false;
        }

        return true;
    }

</script>

<script src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
@Scripts.Render("~/bundles/jquery.geocomplete")
<script type="text/javascript" src="~/Scripts/geoxml3.js"></script>

<script>
      $(function(){

        //setup geo-autocomplete input
        $("#geocomplete").geocomplete({
          map: ".addPersonMapCanvas",
          types: ['address'],
          country: '@country' ,
          details:"#addPersonForm",
          detailsAttribute: "data-geo"
        });

        $("#geocomplete").bind(
            "geocode:result",
            function (event, result)
            {
                $("#StreetAddress").val($("#Route").val() + ' ' + $("#StreetNumber").val());

                validateAddress();
            })

        //Add map to geo-autocomplete
        var map = $("#geocomplete").geocomplete("map");
        map.setCenter(new google.maps.LatLng(56.0000, 12.0000));
        map.setZoom(7);

        //Display district boundary
        var myParser = new geoXML3.parser({
            map: map,
            zoom: true,
            singleInfoWindow: true
        });
        myParser.parse('@Url.Action("MapKml", "District", new { id = ViewBag.DistrictId })');

      });
</script>
